<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interview Questions - CVGuru</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #ffffff;
        }
        
        .header-section {
            padding: 60px 0 40px 0;
            text-align: center;
        }
        
        .header-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 15px;
        }
        
        .job-role {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 20px;
        }
        
        .btn-generate-answers {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 50px;
            padding: 18px 45px;
            font-size: 1.2rem;
            font-weight: 600;
            color: white;
            transition: all 0.3s ease;
        }
        
        .btn-generate-answers:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
            color: white;
        }
        
        .question-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }
        
        .question-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.08);
        }
        
        .question-header {
            padding: 30px;
        }
        
        .question-number {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 20px;
        }
        
        .question-text {
            font-size: 1.1rem;
            color: #ffffff;
            margin: 0;
            display: inline;
        }
        
        .answer-section {
            padding: 30px;
            background: rgba(102, 126, 234, 0.08);
            border-top: 1px solid rgba(102, 126, 234, 0.2);
            display: none;
        }
        
        .answer-content {
            color: #e0e0e0;
            line-height: 1.6;
        }
        
        .loading-spinner {
            display: none;
            text-align: center;
            margin: 30px 0;
        }
        
        .back-button {
            background: transparent;
            border: 2px solid #667eea;
            border-radius: 50px;
            padding: 12px 30px;
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .back-button:hover {
            background: #667eea;
            color: white;
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header-section">
            <h1 class="header-title">
                <i class="fas fa-check-circle text-success me-3"></i>Questions Generated!
            </h1>
            <p class="job-role">Target Role: {{ job_title }}</p>
            <p class="text-muted">{{ questions|length }} personalized interview questions ready</p>
        </div>
        
        <div class="text-center mb-5">
            <button id="generateAnswers" class="btn btn-generate-answers">
                <i class="fas fa-magic me-2"></i>Generate Sample Answers
            </button>
            <div class="loading-spinner" id="loadingSpinner">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Creating personalized answers...</p>
            </div>
        </div>
        
        <div class="row">
            <div class="col-lg-10 mx-auto">
                {% for question in questions %}
                <div class="question-card">
                    <div class="question-header">
                        <span class="question-number">{{ loop.index }}</span>
                        <p class="question-text">{{ question }}</p>
                    </div>
                    <div class="answer-section" id="answer-{{ loop.index }}">
                        <div class="answer-content"></div>
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
        
        <div class="text-center mt-5">
            <a href="/predict" class="back-button">
                <i class="fas fa-arrow-left me-2"></i>Generate New Questions
            </a>
        </div>
    </div>
    
    <script>
    document.getElementById('generateAnswers').addEventListener('click', function() {
        const button = this;
        const spinner = document.getElementById('loadingSpinner');
        
        button.style.display = 'none';
        spinner.style.display = 'block';
        
        fetch('/generate_answers', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            spinner.style.display = 'none';
            
            if (data.error) {
                alert('Error: ' + data.error);
                button.style.display = 'inline-block';
                return;
            }
            
            if (data.structured_answers) {
                const answerSections = document.querySelectorAll('.answer-section');
                
                answerSections.forEach((section, index) => {
                    const questionNumber = index + 1;
                    const answerContent = section.querySelector('.answer-content');
                    
                    if (data.structured_answers[questionNumber]) {
                        answerContent.innerHTML = '<p>' + data.structured_answers[questionNumber] + '</p>';
                    } else {
                        answerContent.innerHTML = '<p>Sample answer based on your resume experience.</p>';
                    }
                    
                    section.style.display = 'block';
                });
            }
            
            button.innerHTML = '<i class="fas fa-sync me-2"></i>Regenerate Answers';
            button.style.display = 'inline-block';
        })
        .catch(error => {
            console.error('Error:', error);
            spinner.style.display = 'none';
            button.style.display = 'inline-block';
            alert('An error occurred. Please try again.');
        });
    });
    </script>
</body>
</html>
